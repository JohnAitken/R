geom_bar() +
labs(x = "app_status",title="app_status count showing online receipts")
class(rtbl$MI_BPS17_ONLINE_REC_FLG)
rtbl$MI_BPS17_ONLINE_REC_FLG <- as.factor(rtbl$MI_BPS17_ONLINE_REC_FLG)
class(rtbl$MI_BPS17_ONLINE_REC_FLG)
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status,fill=MI_BPS17_ONLINE_REC_FLG)) +
geom_bar() +
labs(x = "app_status",title="app_status count showing online receipts")
summarise(rtbl$MI_BPS17_ONLINE_REC_FLG)
levels(rtbl$MI_BPS17_ONLINE_REC_FLG)
class(rtbl$MI_BPS17_ONLINE_REC_FLG)
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status)) +
geom_bar() +
labs(x = "app_status",title="app_status count showing online receipts") +
facet_grid(MI_BPS17_ONLINE_REC_FLG)
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status,fill=MI_BPS17_ONLINE_REC_FLG)) +
geom_bar() +
labs(x = "app_status",title="app_status count showing online receipts")
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status)) +
geom_bar() +
labs(x = "app_status",title="app_status count showing online receipts") +
facet_grid(rtbl$MI_BPS17_ONLINE_REC_FLG)
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status)) +
geom_bar() +
labs(x = "app_status",title="app_status count showing online receipts") +
facet_grid(rtbl$MI_BPS17_ONLINE_REC_FLG ~.)
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status)) +
geom_bar() +
labs(x = "app_status",title="app_status count showing online receipts") +
facet_grid(.~rtbl$MI_BPS17_ONLINE_REC_FLG)
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status)) +
geom_bar() +
labs(x = "app_status",title="app_status count showing online receipts") +
facet_grid(.~MI_BPS17_ONLINE_REC_FLG)
View(rtbl)
View(rtbl)
class(rtbl$MI_BPS17_RECEIPT_DT)
as.Date(rtbl$MI_BPS17_RECEIPT_DT, format = "%d/%m/%Y %H:%M")
class(rtbl$MI_BPS17_RECEIPT_DT)
rtbl$MI_BPS17_RECEIPT_DT <- as.Date(rtbl$MI_BPS17_RECEIPT_DT, format = "%d/%m/%Y %H:%M")
rtbl$MI_BPS17_RECEIPT_DT <- as.Date(rtbl$MI_BPS17_RECEIPT_DT, format = "%d/%m/%Y %H:%M")
class(rtbl$MI_BPS17_RECEIPT_DT)
class(rtbl$MI_BPS17_RECEIPT_DT)
rtbl$MI_BPS17_RECEIPT_DT <- as.Factor(rtbl$MI_BPS17_RECEIPT_DT, format = "%d/%m/%Y %H:%M")
rtbl$MI_BPS17_RECEIPT_DT <- as.Factor(rtbl$MI_BPS17_RECEIPT_DT)
rtbl$MI_BPS17_RECEIPT_DT <- as.factor(rtbl$MI_BPS17_RECEIPT_DT)
class(rtbl$MI_BPS17_RECEIPT_DT)
rtbl$MI_BPS17_RECEIPT_DT <- as.Date(rtbl$MI_BPS17_RECEIPT_DT, format = "%d/%m/%Y %H:%M")
class(rtbl$MI_BPS17_RECEIPT_DT)
str(rtbl)
ggplot(rtbl,aes(x=MI_BPS17_RECEIPT_DT)) +
geom_line()
ggplot(rtbl,aes(x=MI_BPS17_RECEIPT_DT,y=sbi)) +
geom_line()
ggplot(rtbl,aes(x=MI_BPS17_RECEIPT_DT,y=SBI)) +
geom_line()
rtbl$SBI <- as.factor(rtbl$SBI)
ggplot(rtbl,aes(x=MI_BPS17_RECEIPT_DT,y=SBI)) +
geom_line()
rtbl$SBI <- as.character(rtbl$SBI)
ggplot(rtbl,aes(x=MI_BPS17_RECEIPT_DT,y=SBI)) +
geom_line()
ggplot(rtbl,aes(x=MI_BPS17_RECEIPT_DT,y=count(SBI))) +
geom_line()
ggplot(rtbl,aes(x=MI_BPS17_RECEIPT_DT)) +
geom_histogram()
ggplot(rtbl,aes(x=MI_BPS17_RECEIPT_DT)) +
geom_histogram(binwidth = 5)
ggplot(rtbl,aes(x=MI_BPS17_RECEIPT_DT)) +
geom_bar()
geom_bar()
---
title: "RTBL_Exercises"
output: html_document
editor_options:
chunk_output_type: inline
---
### Importing and barcharts
Import the csv
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
Load libraries (dplyr and ggplot2)and read in the rbbl to a dataframe called rtbl
```{r, include=FALSE,echo=FALSE}
library(dplyr)
library(ggplot2)
```
```{r}
rtbl <- read.csv("STG_RTBL20170623_DUMMYDATA.csv",header=TRUE)
```
If we want to do a plot based on the app stratus, we get this:
```{r echo=TRUE}
ggplot(rtbl,aes(x=bps17_app_status)) +
geom_bar()
```
Note the 1st col, which is populating blanks. To get rid of this we can change all the blanks to NA in the dataframe
```{r}
rtbl[rtbl==""] <- NA
```
Now if we run the plot the blanks have become NAs, so are ignored in the output when we use the !is.na function to filter them out
```{r,echo=TRUE}
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status)) +
geom_bar() +
labs(x = "app_status",title="NA's instead of blanks")
```
So what else can we do?
We could split the bars using fill= in the aes.
```{r, echo=TRUE}
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status,fill=MI_BPS17_ONLINE_REC_FLG)) +
geom_bar() +
labs(x = "app_status",title="app_status count showing online receipts")
```
That doesn't seem to work. Let's see what type of data it is, as it has to be a factor with levels and not something like a number.
```{r ,echo=TRUE}
class(rtbl$MI_BPS17_ONLINE_REC_FLG)
```
We need to change it to a type that has limited values, like a *factor*, which has levels rather than being a continous data type. So we change it to a factor.
```{r, echo=TRUE}
rtbl$MI_BPS17_ONLINE_REC_FLG <- as.factor(rtbl$MI_BPS17_ONLINE_REC_FLG)
class(rtbl$MI_BPS17_ONLINE_REC_FLG)
```
So now when we trt to FILL with MI_BPS17_ONLINE_REC_FLG we get a better result
```{r}
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status,fill=MI_BPS17_ONLINE_REC_FLG)) +
geom_bar() +
labs(x = "app_status",title="app_status count showing online receipts")
```
Rather than splitting the bars, we can plot them alongside each other with *facets*. Note the tilde and the ., denoting the order and positioning of the panels. The facet item cannot be a continuous data type. More on facets here: https://plot.ly/ggplot2/facet/
```{r}
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status)) +
geom_bar() +
labs(x = "app_status",title="app_status count showing online receipt flag") +
facet_grid(.~MI_BPS17_ONLINE_REC_FLG)
```
How about a line graph? For these, the line must be continuous, and you need to specify an x and a y measure.
We could do with using a date column such as MI_BPS17_RECEIPT_DT.
```{r,echo=TRUE}
class(rtbl$MI_BPS17_RECEIPT_DT)
```
So we change to a date. To do this we have to specify what format the date is currently in so it can interpret the values it finds.
```{r}
rtbl$MI_BPS17_RECEIPT_DT <- as.Date(rtbl$MI_BPS17_RECEIPT_DT, format = "%d/%m/%Y %H:%M")
class(rtbl$MI_BPS17_RECEIPT_DT)
```
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
rtbl <- read.csv("STG_RTBL20170623_DUMMYDATA.csv",header=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
rtbl <- read.csv("STG_RTBL20170623_DUMMYDATA.csv",header=TRUE)
ggplot(rtbl,aes(x=bps17_app_status)) +
geom_bar()
rtbl[rtbl==""] <- NA
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status)) +
geom_bar() +
labs(x = "app_status",title="NA's instead of blanks")
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status,fill=MI_BPS17_ONLINE_REC_FLG)) +
geom_bar() +
labs(x = "app_status",title="app_status count showing online receipts")
class(rtbl$MI_BPS17_ONLINE_REC_FLG)
rtbl$MI_BPS17_ONLINE_REC_FLG <- as.factor(rtbl$MI_BPS17_ONLINE_REC_FLG)
class(rtbl$MI_BPS17_ONLINE_REC_FLG)
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status,fill=MI_BPS17_ONLINE_REC_FLG)) +
geom_bar() +
labs(x = "app_status",title="app_status count showing online receipts")
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status)) +
geom_bar() +
labs(x = "app_status",title="app_status count showing online receipt flag") +
facet_grid(.~MI_BPS17_ONLINE_REC_FLG)
class(rtbl$MI_BPS17_RECEIPT_DT)
df <- table(rtbl$MI_BPS17_RECEIPT_DT,)
df <- table(rtbl$MI_BPS17_RECEIPT_DT,count(rtbl$MI_BPS17_RECEIPT_DT,rtbl$MI_BPS17_RECEIPT_DT))
count(rtbl$MI_BPS17_RECEIPT_DT)
? count
?count
?tally
tally()
tally(rtbl$MI_BPS17_RECEIPT_DT)
summarise(rtbl$MI_BPS17_RECEIPT_DT)
library(dplyr)
summarise(rtbl$MI_BPS17_RECEIPT_DT)
summarise(rtbl$MI_BPS17_RECEIPT_DT)
summarise(rtbl)
rtbl
head(rtbl)
summarise(rtbl$MI_BPS17_RECEIPT_DT,count=n())
class(rtbl$MI_BPS17_RECEIPT_DT)
new<-summarise(rtbl$MI_BPS17_RECEIPT_DT,count=n())
group_by()
?group_by
x <- group_by(rtbl$Claim_Group)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
rtbl <- read.csv("STG_RTBL20170623_DUMMYDATA.csv",header=TRUE)
ggplot(rtbl,aes(x=bps17_app_status)) +
geom_bar()
rtbl[rtbl==""] <- NA
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status)) +
geom_bar() +
labs(x = "app_status",title="NA's instead of blanks")
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status,fill=MI_BPS17_ONLINE_REC_FLG)) +
geom_bar() +
labs(x = "app_status",title="app_status count showing online receipts")
class(rtbl$MI_BPS17_ONLINE_REC_FLG)
rtbl$MI_BPS17_ONLINE_REC_FLG <- as.factor(rtbl$MI_BPS17_ONLINE_REC_FLG)
class(rtbl$MI_BPS17_ONLINE_REC_FLG)
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status,fill=MI_BPS17_ONLINE_REC_FLG)) +
geom_bar() +
labs(x = "app_status",title="app_status count showing online receipts")
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status)) +
geom_bar() +
labs(x = "app_status",title="app_status count showing online receipt flag") +
facet_grid(.~MI_BPS17_ONLINE_REC_FLG)
class(rtbl$MI_BPS17_RECEIPT_DT)
rtbl$MI_BPS17_RECEIPT_DT <- as.Date(rtbl$MI_BPS17_RECEIPT_DT, format = "%d/%m/%Y %H:%M")
class(rtbl$MI_BPS17_RECEIPT_DT)
x <- group_by(rtbl$Claim_Group)
x <- count(rtbl$SBI,group_by(rtbl$Claim_Group))
count(rtbl$SBI,group_by(rtbl$Claim_Group))
x <- count(rtbl$Claim_Group,group_by(rtbl$SBI))
rtbl
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
rtbl <- read.csv("STG_RTBL20170623_DUMMYDATA.csv",header=TRUE)
ggplot(rtbl,aes(x=bps17_app_status)) +
geom_bar()
rtbl[rtbl==""] <- NA
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status)) +
geom_bar() +
labs(x = "app_status",title="NA's instead of blanks")
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status,fill=MI_BPS17_ONLINE_REC_FLG)) +
geom_bar() +
labs(x = "app_status",title="app_status count showing online receipts")
class(rtbl$MI_BPS17_ONLINE_REC_FLG)
rtbl$MI_BPS17_ONLINE_REC_FLG <- as.factor(rtbl$MI_BPS17_ONLINE_REC_FLG)
class(rtbl$MI_BPS17_ONLINE_REC_FLG)
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status,fill=MI_BPS17_ONLINE_REC_FLG)) +
geom_bar() +
labs(x = "app_status",title="app_status count showing online receipts")
ggplot(rtbl[!is.na(rtbl$bps17_app_status),],aes(x=bps17_app_status)) +
geom_bar() +
labs(x = "app_status",title="app_status count showing online receipt flag") +
facet_grid(.~MI_BPS17_ONLINE_REC_FLG)
class(rtbl$MI_BPS17_RECEIPT_DT)
rtbl$MI_BPS17_RECEIPT_DT <- as.Date(rtbl$MI_BPS17_RECEIPT_DT, format = "%d/%m/%Y %H:%M")
class(rtbl$MI_BPS17_RECEIPT_DT)
library(dplyr)
library(ggplot2)
rtbl <- read.csv("STG_RTBL20170623_DUMMYDATA.csv",header=TRUE)
rtbl[rtbl==""] <- NA
rtbl$MI_BPS17_ONLINE_REC_FLG <- as.factor(rtbl$MI_BPS17_ONLINE_REC_FLG)
rtbl$MI_BPS17_RECEIPT_DT <- as.Date(rtbl$MI_BPS17_RECEIPT_DT, format = "%d/%m/%Y %H:%M")
class(rtbl$MI_BPS17_RECEIPT_DT)
df <- c(rtbl$SBI,rtbl$MI_BPS17_RECEIPT_DT)
summarise(df)
df
str(df)
df <- table(rtbl$SBI,rtbl$MI_BPS17_RECEIPT_DT)
df
summarise(df)
str(df)
df_group <- group_by(df)
df_group <- as.data.frame(df)
View(df_group)
library(dplyr)
library(ggplot2)
rtbl <- read.csv("STG_RTBL20170623_DUMMYDATA.csv",header=TRUE)
rtbl[rtbl==""] <- NA
rtbl$MI_BPS17_ONLINE_REC_FLG <- as.factor(rtbl$MI_BPS17_ONLINE_REC_FLG)
rtbl$MI_BPS17_RECEIPT_DT <- as.Date(rtbl$MI_BPS17_RECEIPT_DT, format = "%d/%m/%Y %H:%M")
class(rtbl$MI_BPS17_RECEIPT_DT)
tostring(rtbl$SBI)
toString(rtbl$SBI)
class(rtbl$SBI)
rtbl <- read.csv("STG_RTBL20170623_DUMMYDATA.csv",header=TRUE,stringsAsFactors = FALSE)
rtbl[rtbl==""] <- NA
rtbl$MI_BPS17_ONLINE_REC_FLG <- as.factor(rtbl$MI_BPS17_ONLINE_REC_FLG)
rtbl$MI_BPS17_RECEIPT_DT <- as.Date(rtbl$MI_BPS17_RECEIPT_DT, format = "%d/%m/%Y %H:%M")
class(rtbl$SBI)
toString(rtbl$SBI)
str(rtbl)
graphdata <- c(rtbl$SBI,rtbl$bps17_app_status)
graphdata
graphdata <- group_by(rtbl$SBI,rtbl$bps17_app_status)
graphdata <- data.frame(rtbl$SBI,rtbl$bps17_app_status)
graphdata
graphdata <- data.frame(rtbl$bps17_app_status,count(rtbl$SBI))
graphdata <- data.frame(rtbl$bps17_app_status,tally(rtbl$SBI))
graphdata <- data.frame(rtbl$bps17_app_status,count=n())
graphdata <- data.frame(rtbl$bps17_app_status,count=n(rtbl$SBI))
graphdata <- data.frame(rtbl$bps17_app_status,count=tally()
graphdata <- data.frame(rtbl$bps17_app_status,count=tally()
graphdata <- data.frame(rtbl$bps17_app_status,count=tally())
graphdata <- data.frame(rtbl$bps17_app_status,count=tally(rtbl$SBI))
graphdata <- data.frame(rtbl$SBI,rtbl$bps17_app_status)
str(graphdata
)
ggplot(graphdata,aes=(x=rtbl$bps17_app_status)) +
geom.bar()
ggplot(graphdata,aes=(x=rtbl$bps17_app_status)) +
geom_bar()
ggplot(graphdata,aes(x=rtbl$bps17_app_status)) +
geom_bar()
gsumm <- grouped_df(graphdata)
gsumm <- grouped_df(graphdata,rtbl$SBI)
class(rtbl$SBI)
rtbl$SBI <- as.character(rtbl$SBI)
gsumm <- grouped_df(graphdata,rtbl$SBI)
View(graphdata)
gsumm <- grouped_df(graphdata,rtbl$bps17_app_status)
head(graphdata)
summarise(UKgas)
library(dplyr)
summarise(UKgas)
summarise(USArrests)
USArrests
df <- matrix(USArrests)
summarise(df)
class(df)
summary(df)
names(df)
View(df)
View(graphdata)
library(ggplot2)
df <- graphdata
View(df)
df %>% drop_na(rtbl.bps17_app_status)
library(dplyr)
df %>% drop_na(rtbl.bps17_app_status)
df %>% filter(!is.na(a))
df %>% filter(!is.na(df))
str(df)
df %>% filter(!is.na(rtbl.bps17_app_status))
df_naremoved <- df %>% filter(!is.na(rtbl.bps17_app_status))
View(df_naremoved)
df
summary(df)
df2 <- df %>% filter(!is.na(rtbl.bps17_app_status))
ggplot(df2,aes(x=df$rtbl.bps17_app_status)) + geom_bar()
ggplot(df2,aes(x=df2$rtbl.bps17_app_status)) + geom_bar()
ggplot(df2,aes(x=df2$rtbl.bps17_app_status)) + geom_area()
ggplot(df2,aes(x=df2$rtbl.bps17_app_status,y=count(df2$rtbl.SBI))) + geom_area()
ggplot(df2,aes(x=df2$rtbl.bps17_app_status)) + geom_histogram()
ggplot(df2,aes(x=df2$rtbl.bps17_app_status)) + geom_histogram(stat="count")
ggplot(df2,aes(x=df2$rtbl.bps17_app_status)) + geom_count()
ggplot(df2,aes(x=df2$rtbl.bps17_app_status)) + geom_bar()
View(graphdata)
View(rtbl)
class(rtbl$NUTS.1)
as.factor(rtbl$NUTS.1)
?data
data(list)
data()
View(rtbl)
nrow(rtbl)
class(rtbl$Claim_Group)
as.factor(rtbl$Claim_Group))
rtbl$Claim_Group <- as.factor(rtbl$Claim_Group)
class(rtbl$Claim_Group)
df <- rtbl[!Is.na(Claim_Group),]
df <- rtbl[!is.na(Claim_Group),]
df <- rtbl[!is.na(rtbl$Claim_Group),]
nrow(df)
df <- rtbl[c(!is.na(rtbl$Claim_Group),rtbl$Claim_Group)!="")),]
df <- rtbl[c(!is.na(rtbl$Claim_Group),rtbl$Claim_Group)!=""),]
df <- rtbl[c(!is.na(rtbl$Claim_Group),rtbl$Claim_Group)!="",]
nrow(df)
df <- rtbl[rtbl$Claim_Group <> "",]
df <- rtbl[rtbl$Claim_Group != "",]
nrow(df)
df
class(df$Claim_Group)
df <- df[!is.na(df$Claim_Group))]
df <- df[!is.na(df$Claim_Group)]
df <- df[!is.na(df$Claim_Group),]
nrow(df)
summary(df$Claim_Group))
summary(df$Claim_Group)
col(df)
names(df)
names(rtbl)
df <- rtbl[!in.na(rtbl$MI_BPS17_RECEIPT_METHOD),]
df <- rtbl[!is.na(rtbl$MI_BPS17_RECEIPT_METHOD),]
nrow(df)
df$SBI <- seq(100000001:100085994)
df
head(df)
head(df$$MI_BPS17_RECEIPT_METHOD)
head(df$MI_BPS17_RECEIPT_METHOD)
df$MI_BPS17_RECEIPT_METHOD[]
library(ggplot2)
ggplot(df,aes(x=MI_BPS17_RECEIPT_METHOD)) + geom_bar()
df2<-df(SBI,MI_BPS17_RECEIPT_METHOD)
df2<-c(df$SBI,df$MI_BPS17_RECEIPT_METHOD)
head(df2)
df2<-data.frame(c(df$SBI,df$MI_BPS17_RECEIPT_METHOD))
df2
df2 <- data.frame[c(df$SBI,df$bps17_app_status,df$Claim_Group)]
df2 <- data.frame[df$SBI,df$bps17_app_status,df$Claim_Group]
df2 <- data.frame(df$SBI,df$bps17_app_status,df$Claim_Group)
head(df2)
?names
colnames(df2) <- c("sbi","status","claimgroup")
head(df2)
summary(df2)
df3 <- df2[!in.na(df2$status),]
df3 <- df2[!is.na(df2$status),]
summary(df3)
df3[is.na(df3$claimgroup)] <- "Small"
df3[is.na(df3] <- "Small"
df3[is.na(df3] <- "Small"
df3[is.na(df3)] <- "Small"
summary(df3)
df3$sbi <- as.character()
df3$sbi <- as.character(df3$sbi)
summary(df3)
ggplot(df3,aes(x=df3$MI_BPS17_RECEIPT_METHOD),y=df3$sbi) + geom_line()
ggplot(df3,aes(x=df3$MI_BPS17_RECEIPT_METHOD),y=nrow(df3) + geom_line()
ggplot(df3,aes(x=df3$MI_BPS17_RECEIPT_METHOD),y=nrow(df3)) + geom_line()
ggplot(df3,aes(x=df3$MI_BPS17_RECEIPT_METHOD),y=nrow(df3)) + geom_line()
ggplot(df3,aes(x=df3$MI_BPS17_RECEIPT_METHOD),count=nrow(df3)) + geom_line()
ggplot(df3,aes(x=df3$MI_BPS17_RECEIPT_METHOD),y=count(df3$sbi)) + geom_line()
ggplot(df3,aes(x=df3$MI_BPS17_RECEIPT_METHOD))) + geom_bar()
ggplot(df3,aes(x=df3$MI_BPS17_RECEIPT_METHOD)) + geom_bar()
ggplot(df3,aes(x=df3$MI_BPS17_RECEIPT_METHOD)) + geom_bar()
ggplot(df3,aes(x=MI_BPS17_RECEIPT_METHOD)) + geom_bar()
ggplot(df3,aes(x=claimgroup)) + geom_bar()
ggplot(df3,aes(x=claimgroup)) + geom_point()
summary(df3)
ggplot(df3,aes(x=claimgroup),y=status) + geom_point()
ggplot(df3,aes(x=claimgroup,y=status) + geom_point()
ggplot(df3,aes(x=claimgroup,y=status) + geom_point(stat="sbi")
ggplot(df3,aes(x=claimgroup,y=sbi) + geom_point(stat="sbi")
ggplot(df3,aes(x=claimgroup,y=sbi) + geom_point(stat="sbi")
ggplot(df3,aes(x=claimgroup,y=sbi) + geom_point(stat="sbi")
?geom_point
ggplot(df3,aes(x=claimgroup,y=sbi) + geom_point()
ggplot(df3,aes(x=claimgroup,y=sbi) + geom_area()
ggplot(df3,aes(x=claimgroup,y=sbi)) + geom_area()
ggplot(df3,aes(x=claimgroup,y=sbi)) + geom_area()
ggplot(df3,aes(x=claimgroup,y=sbi)) + geom_boxplot()
View(df3)
df3[is.na(df3)] <- "Small"
ggplot(df,aes(x=MI_BPS17_RECEIPT_METHOD)) + geom_bar()
ggplot(df3,aes(x=claimgroup,y=sbi)) + geom_bin2d()
ggplot(df3,aes(x=claimgroup,y=sbi)) + geom_density()
ggplot(df3,aes(x=claimgroup,y=sbi)) + geom_histogram()
ggplot(df3,aes(x=claimgroup)) + geom_histogram()
ggplot(df3,aes(x=claimgroup)) + geom_histogram(stat_bin(31))
ggplot(df3,aes(x=claimgroup)) + geom_histogram(stat_bin(aes(31))
ggplot(df3,aes(x=claimgroup)) + geom_histogram(stat_bin(aes(sbi))
ggplot(df3,aes(x=claimgroup)) + geom_histogram(stat_bin(aes(sbi)))
ggplot(df3,aes(x=claimgroup)) + geom_histogram(stat="bin")
ggplot(df3,aes(x=claimgroup)) + geom_histogram(stat="count")
ggplot(df3,aes(x=claimgroup)) + geom_histogram(order(stat="count")
ggplot(df3,aes(x=claimgroup)) + geom_histogram(order(stat="count"))
ggplot(df3,aes(x=claimgroup)) + geom_histogram(order(stat="count"))
ggplot(df3,aes(x=claimgroup)) + geom_histogram(order(stat=count))
summary(df3)
table(df3)
summary(df3)
ggplot(df3,aes(x=df3$claimgroup)) + geom_bar()
library(ggplot2)
ggplot(df3,aes(x=df3$claimgroup)) + geom_bar()
ggplot(df3,aes(x=df3$claimgroup)) + geom_dotplot()
ggplot(df3,aes(x=df3$claimgroup)) + geom_qq()
ggplot(df3,aes(x=df3$claimgroup)) + geom_area(stat="bin")
ggplot(df3,aes(x=df3$claimgroup)) + geom_col()
df3$new <- seq(1:nrow(df3))
summary(df3)
df3$new <- seq(100000001:nrow(df3)+100000001)
df3$new <- seq(100000001:nrow(df3+100000001))
df3$new <- seq(100000001:nrow(df3+100000001))
df3$new <- seq(100000001:nrow(as.integer(df3)+100000001))
df3$new <- seq(100000001:length(df3)+100000001))
df3$new <- seq(100000001:length(df3)+100000001)
df3$new <- seq(100000001:length(df3+100000001))
df$new[n] <- n+100000000
df$new[f] <- f+100000000
for (f in length(df3)){
df$new[f] <- f+100000000
}
df$new[f] <- f
df$new[f] <- f
nrow(df3)
df$new[i] <- i
i <- list(100000001:nrow(df3))
for(i in 1:nrow(df)){
df$new[i] <- i
}
i
i <- list(c(100000001:nrow(df3))
i <- list(c(seq(100000001:nrow(df3)))
i <- list(c(seq(100000001:nrow(df3)))
i <- c(seq(100000001:nrow(df3))
i <- c(100000001:nrow(df3))
i
x=i[1:nrow(df),]
x=i[1:nrow(df)]
x
df$new[i] <- x[i]
summary(df3)
i <- c(100000001:nrow(df3)-1)
x=i[1:nrow(df)]
View(rtbl)
str(rtbl)
table(df3)
View(df)

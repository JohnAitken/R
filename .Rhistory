a <- c(1:6)
b <- c(5:10)
1 %in% a
a %in% b
is.element(a,b)
union(a,b)
intersect(a,b)
unique(c(a,b))
a <- c(11:15)
b = c(13:17)
unique(c(a,b))
c <- union(a,b)
i <- intersect(a,b)
setdiff(c,i)
c
setdiff(c,i)
a <- c(1:60)
a
sample(a)
sample(a)
sample(a,replace=TRUE)
args(sample)
example(sample)
sort(b)
sort(b, decreasing = FALSE)
sort(b, decreasing = TRUE)
rev(b)
order(b)
b(order(b))
b[order(b)]
ab[order(ab)]
a <- c(1:runif)1,min=100,max=150)
a <- c(1:runif(1,min=100,max=150))
a <- c(1:round(runif(1,min=100,max=150)))
a
a <- c(1:round(runif(1,min=100,max=150)))
a
sample(a,length(a) %% 5,replace=TRUE)
b<-sort(sample(a,length(a) %% 5,replace=TRUE),decreasing=TRUE)
b
a
length(a)
divv <- length(a) %% 5
divv <- length(a) / 5
divv <- round(length(a) / 5)
b<-sort(sample(a,divv,replace=TRUE),decreasing=TRUE)
b
person <- 31
person <- 31
if(person >- 18){
print("Allow")
}
else
{print("Don't allow")}
}
{print("Don't allow")
}
if(person >= 18){
print("Allow")
}
person<- 16
{print("Don't allow")
}
grp1 <- round(runif(30,10,40))
grp1
any(grp1 , 18)
if(any(grp1 <18){
print("Don't allow")
{
print("Don't allow")
}
print("Don't allow")
if(all(grp1 <10){
f(all(grp1 <10){
print("Allow")
}
else
{
print("Don't allow")
}
}else
if(all(grp1 <10){
if(all(grp1 <10){
print("Allow")
}else{
print("Don't allow")
}
person <- 31
if(person >= 18){
print("Allow")
}
else
{print("Don't allow")
}
person<- 16
if(all(grp1 <10){
{print("Don't allow")
}
if(all(grp1 >10){
if(all(grp1 >10){
print("Allow")
}
else
{print("Don't allow")
}
grp1
if(all(grp1 >=10){
if(all(grp1 >=10){
print("Allow")
}
else
{print("Don't allow")
}
if(all(grp1 >=10){
print("Allow")
}
else
{print("Don't allow")
}
if(all(grp1 >=10){
print("Allow")
} else {
print("Don't allow")
}
if(all(grp1 >=10)){
print("Allow")
} else {
print("Don't allow")
}
if(any(grp1 <18)){
print("Allow")
}
if(any(grp1 <18)){
print("Allow")
}
else
{
print("Don't allow")
}
ifelse(grp1 >1 10,"Allow","Don't allow")
ifelse(grp1 >10,"Allow","Don't allow")
output <- ifelse(grp1 >10,"Allow","Don't allow")
output <- ifelse(grp1 >10 | grp1 <18,"Allow","Don't allow")
output
kids <- c(1:20,min=1,max=6)
kids
kids <- round(runif(20,1,6))
kids
status <- ifelse(kids>=3,"Paid","Free")
status
vec<-c(1:15)
total<- 1
for(i in vec)){
total<-total * i
}
for(i in vec)){
total<-total * i
}
for(i in vec){
total<-total * i
}
vec
total
vec<-c(1:15)
total<- 1
for(i in vec){
total<-total * i
}
vec
total
options(scipen=999)
total
total<- 1
for(i in vec){
if(i %%2==0){
total<-total * i
}
}
total
total<- 1
for(i in seq(2,15,by=2){
total<-total * i
}
total
for(i in seq(2,15,by=2){
total<- 1
for(i in seq(2,15,by=2)){
total<-total * i
}
total
total<- 1
for(i in seq(2,15,by=2)){
total<-total * i
if(i==8){
break
}
}
total
total<- 1
for(i in seq(2,15,by=2)){
if(i==8){
next
}
total<-total * i
}
total
a <- letters
a
for(i in a){
print(a[1:i])
}
print(i)
a
for(i in a){
print(i)
}
#DATAFRAMES
a <-c(1,2,3,4,NA)
b<-c(6,7,8,NA,10)
c<-c(11,12,NA,14,15)
d<-c(16,NA,18,19,20)
e<-c(21,22,23,24,25)
df <- data.frame(a,b,c,d,e)
nrow(df)
ncol(df)
stack(df)
df1<-stack(df)
rdf <- rbind(df,df,df) #row bind, appends arguments into it
rdf
cdf<-cbind(df,df,df)
cdf
class(df)
head(rdf)
head(rdf,3)
tail(rdf,4)
class(rdf$a)
str(rdf)
which(rdf$e > 22)
rdf[hich(rdf$e > 22),]
rdf[which(rdf$e > 22),]
which(names(rdf)%in% c("c","d"))
rdf[, c(3,4)]
z<-which(names(rdf)%in% c("c","d"))
rdf[, z]
whick(rdf[,5] > 22) == which(rdf$e >22)
which(rdf[,5] > 22) == which(rdf$e >22)
rdf
rdf[order(rdf$e),]
rdf[rev(order(rdf$e)),]
attach(rdf)
named(rdf)
names(rdf)
a
b
attach(rdf) #adds the cols to environemnt so you don't need rdf$columnname - careful of existing variables (like here!)
m1<-matric(1:100,nrow=10)
m1<-matrix(1:100,nrow=10)
m1
class)m1
class(m1)
summary(rdf)
named(rdf)
names(rdf)
colnames(rdf)
rownames(rdf)
colnames(rdf) <- c("a1","b1","c1,"d1",e1")
colnames(rdf) <- c("a1","b1","c1,"d1",e1")
colnames(rdf) <- c("a1","b1","c1","d1","e1")
colnames(rdf)
rdf
View(rdf)
fix(rdf)
#Transpose
t(rdf)
#Transpose
t<-t(rdf)
#Transpose
trdf<-t(rdf)
trdf
class(rdf)
ref_n<-na.omit(rdf)
ref_n
rdf[4,]
red[4,1]
rdf[4,1]
rdf[c(4,5),c(2,3,5)]
rdf$a1
#practicing
df <- data.frame(100,5)
df
a<-c(runif(100,min=1,max=10))
a
a<-c(round(runif(100,min=1,max=10))
a<-c(round(runif(100,min=1,max=10)))
a
df<-cbind(a,b,c,d,e)
df
a<-c(round(runif(100,min=1,max=10)))
b<-c(round(runif(100,min=1,max=10)))
c<-c(round(runif(100,min=1,max=10)))
d<-c(round(runif(100,min=1,max=10)))
e<-c(round(runif(100,min=1,max=10)))
df<-cbind(a,b,c,d,e)
df
class(df)
a<-c(round(runif(100,min=1,max=10)))
b<-c(round(runif(100,min=1,max=10)))
c<-c(round(runif(100,min=1,max=10)))
d<-c(round(runif(100,min=1,max=10)))
e<-c(round(runif(100,min=1,max=10)))
df<-data.frame(cbind(a,b,c,d,e))
df
class(df)
df$a[round(runif(100,1,10))] <- NA
df
df$a[round(runif(100))] <- NA
dfdf
df
a<-c(round(runif(100,min=1,max=10)))
b<-c(round(runif(100,min=1,max=10)))
c<-c(round(runif(100,min=1,max=10)))
d<-c(round(runif(100,min=1,max=10)))
e<-c(round(runif(100,min=1,max=10)))
df<-data.frame(cbind(a,b,c,d,e))
df
class(df)
df$a[round(runif(100))] <- NA
a<-c(round(runif(100,min=1,max=10)))
b<-c(round(runif(100,min=1,max=10)))
c<-c(round(runif(100,min=1,max=10)))
d<-c(round(runif(100,min=1,max=10)))
e<-c(round(runif(100,min=1,max=10)))
df<-data.frame(cbind(a,b,c,d,e))
df
class(df
a<-c(round(runif(100,min=1,max=10)))
b<-c(round(runif(100,min=1,max=10)))
c<-c(round(runif(100,min=1,max=10)))
d<-c(round(runif(100,min=1,max=10)))
e<-c(round(runif(100,min=1,max=10)))
df<-data.frame(cbind(a,b,c,d,e))
df
class(df)
df$a[round(runif(100))] <- NA
df$a
a<-c(round(runif(100,min=1,max=10)))
b<-c(round(runif(100,min=1,max=10)))
c<-c(round(runif(100,min=1,max=10)))
d<-c(round(runif(100,min=1,max=10)))
e<-c(round(runif(100,min=1,max=10)))
df<-data.frame(cbind(a,b,c,d,e))
df
class(df)
df[sample(1:100,5),1] <- NA
df[sample(1:100,5),1] <- NA
df[sample(1:100,5),2] <- NA
df[sample(1:100,5),3] <- NA
df[sample(1:100,5),4] <- NA
df[sample(1:100,5),5] <- NA
a<-c(round(runif(100,min=1,max=10)))
b<-c(round(runif(100,min=1,max=10)))
c<-c(round(runif(100,min=1,max=10)))
d<-c(round(runif(100,min=1,max=10)))
e<-c(round(runif(100,min=1,max=10)))
df<-data.frame(cbind(a,b,c,d,e))
df
class(df)
df[sample(1:100,5),1] <- NA
df[sample(1:100,5),2] <- NA
df[sample(1:100,5),3] <- NA
df[sample(1:100,5),4] <- NA
df[sample(1:100,5),5] <- NA
df
a<-c(round(runif(100,min=1,max=10)))
b<-c(round(runif(100,min=1,max=10)))
c<-c(round(runif(100,min=1,max=10)))
d<-c(round(runif(100,min=1,max=10)))
e<-c(round(runif(100,min=1,max=10)))
df<-data.frame(cbind(a,b,c,d,e))
df
class(df)
for(colnum in c(1:ncol(df))){
df[sample(1:100,5),colnum] <- NA
}
df
summary(df)
df$a[is.na(),]
df$a[is.na(a),]
df[is.na(a),]
df[!is.na(a),]
df[is.na(df$a),]
which(is.na(df$a))
df[order(df$a, -df$b)]
df[order(df$a, -df$b),]
#Practice3
library(datasets)
#Practice3
library(help=datasets)
View(USArrests)
df <- USArrests[order(USArrests$Murder),]
df
ansa <- df[length(df$Murder*0.25,]
ansa <- df[length(df$Murder*0.25,)]
ansa <- df[length(df$Murder*0.25),]
ansa
ansa <- df[1:length(df$Murder*0.25),]
ansaansa
ansa
df
df <- USArrests[order(USArrests$Murder),]
df
numrows <- (nrow(df)*0.25)
df[c(1:round(numrows)),]
x <- c(1:1000)
y <- c(runif(1000,1,20)
y <- c(runif(1000,1,20))
y <- c(runif(1000,1,20))
df <- data.frame(x,y)
str(df)
plot(df)
linrary(mass)
library(mass)
library(MASS)
dat(MASS)
data(MASS)
painters
school <- painters$school
school.frq <- table(school)
class(school.frq)
school.frq
school = painters$School
school.frq <- table(school)
school.frq
cbind(school.frq)
df <- cbind(school.frq)
df
max(school.frq)
barplot(school.frq)
colors = c("red", "yellow", "green", "violet",
+   "orange", "blue", "pink", "cyan")
colors = c("red", "yellow", "green", "violet",
"orange", "blue", "pink", "cyan")
barplot(school.frq) + col=colors
barplot(school.frq) + col=colors
barplot(school.frq,col=colors)
colors = c("grey", "yellow", "green", "violet",
"orange", "blue", "pink", "cyan")
barplot(school.frq,col=colors)
painters
school
pie(school.frq)
rm(ROAuth)
install.packages(tidyverse)
install.packages("tidyverse")
install.packages("dplyr")
install.packages("tidyr")
install.packages("stringr")
install.packages("ggplot2")
install.packages("lubridate")
install.packages("shiny")
library(dplyr)
library(tidyverse)
library(dplyr)
data()
df<-data(starwars)
df
starwars
starwars\
starwars
data()
library("dbplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
data()
data(package = .packages(all.available = TRUE))
library(dplyr)
starwars
filter(starwars,mass<80)
df<-filter(starwars,mass<80)
View(df)
df<-starwars
View(df)
tbl_df(starwars)
glimpse(starwars)
library(tidyr)
plot(select(starwars,height,mass)
starwars
glimpse(starwars)
distinct(starwars)
separate(starwars,films)
View(df)
install.packages(c("assertthat", "backports", "broom", "callr", "class", "cli", "clipr", "cluster", "codetools", "colorspace", "dplyr", "evaluate", "forcats", "fs", "ggplot2", "glue", "gtable", "haven", "highr", "httpuv", "knitr", "later", "lazyeval", "MASS", "Matrix", "mgcv", "modelr", "nlme", "openssl", "processx", "purrr", "R6", "Rcpp", "readxl", "rlang", "rmarkdown", "rpart", "rstudioapi", "rvest", "shiny", "stringi", "stringr", "survival", "sys", "tibble", "tidyr", "tinytex", "xfun"))
library(dplyr)
library(tidyr)
df<-starwars
tbl_df(starwars)
glimpse(starwars)
distinct(starwars)
separate(starwars,films)
separate(starwars,films,sep=",")
separate(starwars,films,"list",sep=",")
View(df)
df2 <- separate(starwars,films,"list",sep=",")
View(df2)
df[,]
a <- c(1:6)
b <- factor(c("Good","Bad","Ugly","Bad","Bad"))
a1 <- as.numeric(a)
length(a1)
ab <- c(1,2,3,5,3,32,3,4,5,6,6,54,4,3,22,234)
ab[c(1,length(ab))]
test <- rep(1:10,by=2,each=3,times=2)
letters[runif(10,min=1,max=26)]
install.packages(c("boot", "cluster", "dbplyr", "digest", "dplyr", "fs", "knitr", "nlme", "pillar", "processx", "progress", "reprex", "rmarkdown", "rvest", "shiny", "sys", "tinytex", "xfun", "xtable"))
